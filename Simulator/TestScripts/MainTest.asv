% Test Rocket class and simulator

close all;
clear all;
clc;

R = RocketJuju();
S = SimulationZurich(R);

% Plot stuff
t = linspace(0, max([R.Motor.bt])+15, 100);
for it = 1:length(t) 
   mass(it) = R.m(t(it));
   cm(it) = R.cm(t(it));
   Iz(it) = R.Iz(t(it));
   Ir(it) = R.Ir(t(it));
end
figure
subplot(5,1,1)
plot(t, mass);
title('Mass properties');
ylabel('m [kg]');
subplot(5,1,2)
plot(t, cm);
ylabel('CM [m]');
subplot(5,1,3)
plot(t, Iz);
ylabel('Iz [kg*m^2]');
subplot(5,1,4)
plot(t, Ir);
ylabel('Ir [kg*m^2]');
subplot(5, 1, 5)
plot(R.Motor.ThrustCurve(1:end-1,1), R.Motor.ThrustCurve(1:end-1,2));  
ylabel('Ft [N]');
xlabel('t [s]');

alpha = linspace(-30, 30, 100)*pi/180;
figure
for alpha_i = 1:length(alpha)
   [CNa(alpha_i), zCP(alpha_i)] = R.aeroCoeff(alpha(alpha_i), 0, 0); 
end
subplot(2,1,1)
plot(alpha*180/pi, CNa.*alpha);
title('Aerodynamic properties at M = 0 & \theta = 0.')
ylabel('CN');
grid on;
subplot(2,1,2)
plot(alpha*180/pi, zCP);
ylabel('zCP [m]');
grid on;
xlabel('alpha [^\circ]');

drawRocket(R);

% Simulate part
[tsim, Xsim, alpha, calibre, T, M] = Simulate( R, S);

